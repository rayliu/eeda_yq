package controllers.profile;import interceptor.EedaMenuInterceptor;import interceptor.SetAttrLoginUserInterceptor;import java.util.Calendar;import java.util.Collections;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import models.DepartOrder;import models.Office;import models.ParentOfficeModel;import models.Party;import models.UserLogin;import models.eeda.oms.jobOrder.JobOrder;import models.eeda.profile.DockInfo;import models.yh.profile.Contact;import org.apache.commons.lang.StringUtils;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authz.annotation.RequiresAuthentication;import org.apache.shiro.subject.Subject;import com.google.gson.Gson;import com.jfinal.aop.Before;import com.jfinal.core.Controller;import com.jfinal.kit.StrKit;import com.jfinal.log.Log;import com.jfinal.plugin.activerecord.Db;import com.jfinal.plugin.activerecord.Record;import controllers.util.DbUtils;import controllers.util.ParentOffice;import controllers.util.getCustomFile;@RequiresAuthentication@Before(SetAttrLoginUserInterceptor.class)public class DockInfoController extends Controller {    private Log logger = Log.getLog(DockInfoController.class);        Subject currentUser = SecurityUtils.getSubject();    ParentOfficeModel pom = ParentOffice.getInstance().getOfficeId(this);      @Before(EedaMenuInterceptor.class)    public void index() {		    render("/eeda/profile/dockInfo/dockInfolist.html");     }       public void list() {    	Long parentID = pom.getParentOfficeId();                String sLimit = "";        String pageIndex = getPara("draw");        if (getPara("start") != null && getPara("length") != null) {            sLimit = " LIMIT " + getPara("start") + ", " + getPara("length");        }        String sql = " select * from (select d.* from dockinfo d"                    + " where d.office_id  = " + parentID                     + " ) A where 1=1";                String condition ="";        String dock_name = getPara("dock_name");        String quick_search_code = getPara("quick_search_code");        String dock_region = getPara("dock_region");        if(StringUtils.isNotEmpty(dock_name)){        	condition+=" and  (dock_name like '%"+dock_name+"%' or dock_name_eng like '%"+dock_name+"%')";        }        if(StringUtils.isNotEmpty(quick_search_code)){        	condition+=" and  quick_search_code like '%"+quick_search_code+"%'";        }        if(StringUtils.isNotEmpty(dock_region)){        	condition+=" and  dock_region like '%"+dock_region+"%'";        }        //        String condition = DbUtils.buildConditions(getParaMap());        String sqlTotal = "select count(1) total from ("+sql+ condition+") B";        Record rec = Db.findFirst(sqlTotal);        List<Record> orderList = Db.find(sql+ condition + " order by id desc " +sLimit);        Map map = new HashMap();        map.put("draw", pageIndex);        map.put("recordsTotal", rec.getLong("total"));        map.put("recordsFiltered", rec.getLong("total"));        map.put("data", orderList);        renderJson(map);     }        @Before(EedaMenuInterceptor.class)    public void add() {            render("/eeda/profile/dockInfo/dockInfoEdit.html");    }        public void save() {    	String jsonStr=getPara("params");       	Gson gson = new Gson();          Map<String, ?> dto= gson.fromJson(jsonStr, HashMap.class);          String id = (String) dto.get("id");        String dock_name = (String) dto.get("dock_name");        String dock_name_eng = (String) dto.get("dock_name_eng");//根据工作单类型生成不同前缀        String quick_search_code = (String)dto.get("quick_search_code");        String dock_region = (String)dto.get("dock_region");                //获取office_id   		UserLogin user = LoginUserController.getLoginUser(this);   		long office_id = user.getLong("office_id");   		        Integer i=0,j=0;        String string="select count(id) a from dockinfo where office_id ="+office_id+" and dock_name like '%"+dock_name+"%'";        String string1="select count(id) a from dockinfo where office_id ="+office_id+" and quick_search_code like '%"+quick_search_code+"%'";        i=Db.find(string).get(0).getLong("a").intValue();        j=Db.find(string1).get(0).getLong("a").intValue();                DockInfo dockInfo = new DockInfo();        if(StringUtils.isNotEmpty(id)){        	dockInfo=DockInfo.dao.findById(id);        	dockInfo.set("dock_name", dock_name);        	dockInfo.set("dock_name_eng", dock_name_eng);        	dockInfo.set("quick_search_code", quick_search_code);        	dockInfo.set("dock_region", dock_region);        	dockInfo.set("office_id", office_id);        	dockInfo.update();        }else {        	if(i==0&&j==0){	        	dockInfo.set("dock_name", dock_name);	        	dockInfo.set("dock_name_eng", dock_name_eng);	        	dockInfo.set("quick_search_code", quick_search_code);	        	dockInfo.set("dock_region", dock_region);	        	dockInfo.set("office_id", office_id);	        	dockInfo.save();        	}		}        Record r = dockInfo.toRecord();        if(i==0||j==0){	        r.set("name_num", i);	        r.set("code_num", j);        }        renderJson(r);    }      public void delete() {        String id = getPara();        if (id != null) {        	//基础数据不能删除        	DockInfo info = DockInfo.dao.findById(id);        	 Object obj = info.get("is_stop");             if(obj == null || "".equals(obj) || obj.equals(false) || obj.equals(0)){            	 info.set("is_stop", true);             }else{            	 info.set("is_stop", false);             }             info.update();        }        redirect("/dockInfo");    }     @Before(EedaMenuInterceptor.class)    public void edit() {        Long id = getParaToLong("id");        DockInfo carinfo = DockInfo.dao.findById(id);               setAttr("dock", carinfo);        render("/eeda/profile/dockInfo/dockInfoEdit.html");    } 	}